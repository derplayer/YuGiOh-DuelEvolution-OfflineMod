// This file contains code from https://github.com/ThirteenAG/Ultimate-ASI-Loader

#pragma once

#define FuncAddr(name) FARPROC addr##name

extern "C"
{
	// dinput8
	FuncAddr(DirectInput8Create);
	FuncAddr(DllCanUnloadNow);
	FuncAddr(DllGetClassObject);
	FuncAddr(DllRegisterServer);
	FuncAddr(DllUnregisterServer);

	// dinput
	FuncAddr(DirectInputCreateA);
	FuncAddr(DirectInputCreateEx);
	FuncAddr(DirectInputCreateW);
	//DllCanUnloadNow
	//DllGetClassObject
	//DllRegisterServer
	//DllUnregisterServer

	// dsound
	FuncAddr(DirectSoundCaptureCreate);
	FuncAddr(DirectSoundCaptureCreate8);
	FuncAddr(DirectSoundCaptureEnumerateA);
	FuncAddr(DirectSoundCaptureEnumerateW);
	FuncAddr(DirectSoundCreate);
	FuncAddr(DirectSoundCreate8);
	FuncAddr(DirectSoundEnumerateA);
	FuncAddr(DirectSoundEnumerateW);
	FuncAddr(DirectSoundFullDuplexCreate);
	//DllCanUnloadNow
	//DllGetClassObject
	FuncAddr(GetDeviceID);

	// d3d8 x86 only
#ifdef WIN32
//DebugSetMute
	FuncAddr(Direct3D8EnableMaximizedWindowedModeShim);
	FuncAddr(Direct3DCreate8);
	FuncAddr(ValidatePixelShader);
	FuncAddr(ValidateVertexShader);
#endif

	// d3d9
	FuncAddr(D3DPERF_BeginEvent);
	FuncAddr(D3DPERF_EndEvent);
	FuncAddr(D3DPERF_GetStatus);
	FuncAddr(D3DPERF_QueryRepeatFrame);
	FuncAddr(D3DPERF_SetMarker);
	FuncAddr(D3DPERF_SetOptions);
	FuncAddr(D3DPERF_SetRegion);
	FuncAddr(DebugSetLevel);
	FuncAddr(DebugSetMute);
	FuncAddr(Direct3D9EnableMaximizedWindowedModeShim);
	FuncAddr(Direct3DCreate9);
	FuncAddr(Direct3DCreate9Ex);
	FuncAddr(Direct3DShaderValidatorCreate9);
	FuncAddr(PSGPError);
	FuncAddr(PSGPSampleTexture);

	// d3d11
	FuncAddr(D3D11CoreCreateDevice);
	FuncAddr(D3D11CoreCreateLayeredDevice);
	FuncAddr(D3D11CoreGetLayeredDeviceSize);
	FuncAddr(D3D11CoreRegisterLayers);
	FuncAddr(D3D11CreateDevice);
	FuncAddr(D3D11CreateDeviceAndSwapChain);
	FuncAddr(D3DKMTCloseAdapter);
	FuncAddr(D3DKMTCreateAllocation);
	FuncAddr(D3DKMTCreateContext);
	FuncAddr(D3DKMTCreateDevice);
	FuncAddr(D3DKMTCreateSynchronizationObject);
	FuncAddr(D3DKMTDestroyAllocation);
	FuncAddr(D3DKMTDestroyContext);
	FuncAddr(D3DKMTDestroyDevice);
	FuncAddr(D3DKMTDestroySynchronizationObject);
	FuncAddr(D3DKMTEscape);
	FuncAddr(D3DKMTGetContextSchedulingPriority);
	FuncAddr(D3DKMTGetDeviceState);
	FuncAddr(D3DKMTGetDisplayModeList);
	FuncAddr(D3DKMTGetMultisampleMethodList);
	FuncAddr(D3DKMTGetRuntimeData);
	FuncAddr(D3DKMTGetSharedPrimaryHandle);
	FuncAddr(D3DKMTLock);
	FuncAddr(D3DKMTOpenAdapterFromHdc);
	FuncAddr(D3DKMTOpenResource);
	FuncAddr(D3DKMTPresent);
	FuncAddr(D3DKMTQueryAdapterInfo);
	FuncAddr(D3DKMTQueryAllocationResidency);
	FuncAddr(D3DKMTQueryResourceInfo);
	FuncAddr(D3DKMTRender);
	FuncAddr(D3DKMTSetAllocationPriority);
	FuncAddr(D3DKMTSetContextSchedulingPriority);
	FuncAddr(D3DKMTSetDisplayMode);
	FuncAddr(D3DKMTSetDisplayPrivateDriverFormat);
	FuncAddr(D3DKMTSetGammaRamp);
	FuncAddr(D3DKMTSetVidPnSourceOwner);
	FuncAddr(D3DKMTSignalSynchronizationObject);
	FuncAddr(D3DKMTUnlock);
	FuncAddr(D3DKMTWaitForSynchronizationObject);
	FuncAddr(D3DKMTWaitForVerticalBlankEvent);
	FuncAddr(D3DPerformance_BeginEvent);
	FuncAddr(D3DPerformance_EndEvent);
	FuncAddr(D3DPerformance_GetStatus);
	FuncAddr(D3DPerformance_SetMarker);
	FuncAddr(EnableFeatureLevelUpgrade);
	FuncAddr(OpenAdapter10);
	FuncAddr(OpenAdapter10_2);

	// ddraw
	FuncAddr(AcquireDDThreadLock);
	FuncAddr(CompleteCreateSysmemSurface);
	FuncAddr(D3DParseUnknownCommand);
	FuncAddr(DDGetAttachedSurfaceLcl);
	FuncAddr(DDInternalLock);
	FuncAddr(DDInternalUnlock);
	FuncAddr(DSoundHelp);
	FuncAddr(DirectDrawCreate);
	FuncAddr(DirectDrawCreateClipper);
	FuncAddr(DirectDrawCreateEx);
	FuncAddr(DirectDrawEnumerateA);
	FuncAddr(DirectDrawEnumerateExA);
	FuncAddr(DirectDrawEnumerateExW);
	FuncAddr(DirectDrawEnumerateW);
	//DllCanUnloadNow
	//DllGetClassObject
	FuncAddr(GetDDSurfaceLocal);
	FuncAddr(GetOLEThunkData);
	FuncAddr(GetSurfaceFromDC);
	FuncAddr(RegisterSpecialCase);
	FuncAddr(ReleaseDDThreadLock);
	FuncAddr(SetAppCompatData);

	// winmm
	FuncAddr(CloseDriver);
	FuncAddr(DefDriverProc);
	FuncAddr(DriverCallback);
	FuncAddr(DrvGetModuleHandle);
	FuncAddr(GetDriverModuleHandle);
	FuncAddr(NotifyCallbackData);
	FuncAddr(OpenDriver);
	FuncAddr(PlaySound);
	FuncAddr(PlaySoundA);
	FuncAddr(PlaySoundW);
	FuncAddr(SendDriverMessage);
	FuncAddr(WOW32DriverCallback);
	FuncAddr(WOW32ResolveMultiMediaHandle);
	FuncAddr(WOWAppExit);
	FuncAddr(aux32Message);
	FuncAddr(auxGetDevCapsA);
	FuncAddr(auxGetDevCapsW);
	FuncAddr(auxGetNumDevs);
	FuncAddr(auxGetVolume);
	FuncAddr(auxOutMessage);
	FuncAddr(auxSetVolume);
	FuncAddr(joy32Message);
	FuncAddr(joyConfigChanged);
	FuncAddr(joyGetDevCapsA);
	FuncAddr(joyGetDevCapsW);
	FuncAddr(joyGetNumDevs);
	FuncAddr(joyGetPos);
	FuncAddr(joyGetPosEx);
	FuncAddr(joyGetThreshold);
	FuncAddr(joyReleaseCapture);
	FuncAddr(joySetCapture);
	FuncAddr(joySetThreshold);
	FuncAddr(mci32Message);
	FuncAddr(mciDriverNotify);
	FuncAddr(mciDriverYield);
	FuncAddr(mciExecute);
	FuncAddr(mciFreeCommandResource);
	FuncAddr(mciGetCreatorTask);
	FuncAddr(mciGetDeviceIDA);
	FuncAddr(mciGetDeviceIDFromElementIDA);
	FuncAddr(mciGetDeviceIDFromElementIDW);
	FuncAddr(mciGetDeviceIDW);
	FuncAddr(mciGetDriverData);
	FuncAddr(mciGetErrorStringA);
	FuncAddr(mciGetErrorStringW);
	FuncAddr(mciGetYieldProc);
	FuncAddr(mciLoadCommandResource);
	FuncAddr(mciSendCommandA);
	FuncAddr(mciSendCommandW);
	FuncAddr(mciSendStringA);
	FuncAddr(mciSendStringW);
	FuncAddr(mciSetDriverData);
	FuncAddr(mciSetYieldProc);
	FuncAddr(mid32Message);
	FuncAddr(midiConnect);
	FuncAddr(midiDisconnect);
	FuncAddr(midiInAddBuffer);
	FuncAddr(midiInClose);
	FuncAddr(midiInGetDevCapsA);
	FuncAddr(midiInGetDevCapsW);
	FuncAddr(midiInGetErrorTextA);
	FuncAddr(midiInGetErrorTextW);
	FuncAddr(midiInGetID);
	FuncAddr(midiInGetNumDevs);
	FuncAddr(midiInMessage);
	FuncAddr(midiInOpen);
	FuncAddr(midiInPrepareHeader);
	FuncAddr(midiInReset);
	FuncAddr(midiInStart);
	FuncAddr(midiInStop);
	FuncAddr(midiInUnprepareHeader);
	FuncAddr(midiOutCacheDrumPatches);
	FuncAddr(midiOutCachePatches);
	FuncAddr(midiOutClose);
	FuncAddr(midiOutGetDevCapsA);
	FuncAddr(midiOutGetDevCapsW);
	FuncAddr(midiOutGetErrorTextA);
	FuncAddr(midiOutGetErrorTextW);
	FuncAddr(midiOutGetID);
	FuncAddr(midiOutGetNumDevs);
	FuncAddr(midiOutGetVolume);
	FuncAddr(midiOutLongMsg);
	FuncAddr(midiOutMessage);
	FuncAddr(midiOutOpen);
	FuncAddr(midiOutPrepareHeader);
	FuncAddr(midiOutReset);
	FuncAddr(midiOutSetVolume);
	FuncAddr(midiOutShortMsg);
	FuncAddr(midiOutUnprepareHeader);
	FuncAddr(midiStreamClose);
	FuncAddr(midiStreamOpen);
	FuncAddr(midiStreamOut);
	FuncAddr(midiStreamPause);
	FuncAddr(midiStreamPosition);
	FuncAddr(midiStreamProperty);
	FuncAddr(midiStreamRestart);
	FuncAddr(midiStreamStop);
	FuncAddr(mixerClose);
	FuncAddr(mixerGetControlDetailsA);
	FuncAddr(mixerGetControlDetailsW);
	FuncAddr(mixerGetDevCapsA);
	FuncAddr(mixerGetDevCapsW);
	FuncAddr(mixerGetID);
	FuncAddr(mixerGetLineControlsA);
	FuncAddr(mixerGetLineControlsW);
	FuncAddr(mixerGetLineInfoA);
	FuncAddr(mixerGetLineInfoW);
	FuncAddr(mixerGetNumDevs);
	FuncAddr(mixerMessage);
	FuncAddr(mixerOpen);
	FuncAddr(mixerSetControlDetails);
	FuncAddr(mmDrvInstall);
	FuncAddr(mmGetCurrentTask);
	FuncAddr(mmTaskBlock);
	FuncAddr(mmTaskCreate);
	FuncAddr(mmTaskSignal);
	FuncAddr(mmTaskYield);
	FuncAddr(mmioAdvance);
	FuncAddr(mmioAscend);
	FuncAddr(mmioClose);
	FuncAddr(mmioCreateChunk);
	FuncAddr(mmioDescend);
	FuncAddr(mmioFlush);
	FuncAddr(mmioGetInfo);
	FuncAddr(mmioInstallIOProcA);
	FuncAddr(mmioInstallIOProcW);
	FuncAddr(mmioOpenA);
	FuncAddr(mmioOpenW);
	FuncAddr(mmioRead);
	FuncAddr(mmioRenameA);
	FuncAddr(mmioRenameW);
	FuncAddr(mmioSeek);
	FuncAddr(mmioSendMessage);
	FuncAddr(mmioSetBuffer);
	FuncAddr(mmioSetInfo);
	FuncAddr(mmioStringToFOURCCA);
	FuncAddr(mmioStringToFOURCCW);
	FuncAddr(mmioWrite);
	FuncAddr(mmsystemGetVersion);
	FuncAddr(mod32Message);
	FuncAddr(mxd32Message);
	FuncAddr(sndPlaySoundA);
	FuncAddr(sndPlaySoundW);
	FuncAddr(tid32Message);
	FuncAddr(timeBeginPeriod);
	FuncAddr(timeEndPeriod);
	FuncAddr(timeGetDevCaps);
	FuncAddr(timeGetSystemTime);
	FuncAddr(timeGetTime);
	FuncAddr(timeKillEvent);
	FuncAddr(timeSetEvent);
	FuncAddr(waveInAddBuffer);
	FuncAddr(waveInClose);
	FuncAddr(waveInGetDevCapsA);
	FuncAddr(waveInGetDevCapsW);
	FuncAddr(waveInGetErrorTextA);
	FuncAddr(waveInGetErrorTextW);
	FuncAddr(waveInGetID);
	FuncAddr(waveInGetNumDevs);
	FuncAddr(waveInGetPosition);
	FuncAddr(waveInMessage);
	FuncAddr(waveInOpen);
	FuncAddr(waveInPrepareHeader);
	FuncAddr(waveInReset);
	FuncAddr(waveInStart);
	FuncAddr(waveInStop);
	FuncAddr(waveInUnprepareHeader);
	FuncAddr(waveOutBreakLoop);
	FuncAddr(waveOutClose);
	FuncAddr(waveOutGetDevCapsA);
	FuncAddr(waveOutGetDevCapsW);
	FuncAddr(waveOutGetErrorTextA);
	FuncAddr(waveOutGetErrorTextW);
	FuncAddr(waveOutGetID);
	FuncAddr(waveOutGetNumDevs);
	FuncAddr(waveOutGetPitch);
	FuncAddr(waveOutGetPlaybackRate);
	FuncAddr(waveOutGetPosition);
	FuncAddr(waveOutGetVolume);
	FuncAddr(waveOutMessage);
	FuncAddr(waveOutOpen);
	FuncAddr(waveOutPause);
	FuncAddr(waveOutPrepareHeader);
	FuncAddr(waveOutReset);
	FuncAddr(waveOutRestart);
	FuncAddr(waveOutSetPitch);
	FuncAddr(waveOutSetPlaybackRate);
	FuncAddr(waveOutSetVolume);
	FuncAddr(waveOutUnprepareHeader);
	FuncAddr(waveOutWrite);
	FuncAddr(wid32Message);
	FuncAddr(wod32Message);

	// version
	FuncAddr(GetFileVersionInfoA);
	FuncAddr(GetFileVersionInfoByHandle);
	FuncAddr(GetFileVersionInfoExA);
	FuncAddr(GetFileVersionInfoExW);
	FuncAddr(GetFileVersionInfoSizeA);
	FuncAddr(GetFileVersionInfoSizeExA);
	FuncAddr(GetFileVersionInfoSizeExW);
	FuncAddr(GetFileVersionInfoSizeW);
	FuncAddr(GetFileVersionInfoW);
	FuncAddr(VerFindFileA);
	FuncAddr(VerFindFileW);
	FuncAddr(VerInstallFileA);
	FuncAddr(VerInstallFileW);
	FuncAddr(VerLanguageNameA);
	FuncAddr(VerLanguageNameW);
	FuncAddr(VerQueryValueA);
	FuncAddr(VerQueryValueW);

	// msimg32
	FuncAddr(AlphaBlend);
	FuncAddr(DllInitialize);
	FuncAddr(GradientFill);
	FuncAddr(TransparentBlt);
	FuncAddr(vSetDdrawflag);
}

void LoadDLL(fs::path selfName)
{
	HMODULE hDll = LoadLibraryW((GetSysDirFsPath() / selfName).c_str());
	if (!hDll)
		return;

#define GetAddr(name) addr##name = GetProcAddress(hDll, #name)
#ifdef WIN32
	if (iequals(selfName.native(), L"d3d8.dll"))
	{
		GetAddr(DebugSetMute);
		GetAddr(Direct3D8EnableMaximizedWindowedModeShim);
		GetAddr(Direct3DCreate8);
		GetAddr(ValidatePixelShader);
		GetAddr(ValidateVertexShader);
	}
	else
#endif
	if (iequals(selfName.native(), L"dinput8.dll"))
	{
		GetAddr(DirectInput8Create);
		GetAddr(DllCanUnloadNow);
		GetAddr(DllGetClassObject);
		GetAddr(DllRegisterServer);
		GetAddr(DllUnregisterServer);
	}
	else if (iequals(selfName.native(), L"dinput.dll"))
	{
		GetAddr(DirectInputCreateA);
		GetAddr(DirectInputCreateEx);
		GetAddr(DirectInputCreateW);
		GetAddr(DllCanUnloadNow);
		GetAddr(DllGetClassObject);
		GetAddr(DllRegisterServer);
		GetAddr(DllUnregisterServer);
	}
	else if (iequals(selfName.native(), L"dsound.dll"))
	{
		GetAddr(DirectSoundCaptureCreate);
		GetAddr(DirectSoundCaptureCreate8);
		GetAddr(DirectSoundCaptureEnumerateA);
		GetAddr(DirectSoundCaptureEnumerateW);
		GetAddr(DirectSoundCreate);
		GetAddr(DirectSoundCreate8);
		GetAddr(DirectSoundEnumerateA);
		GetAddr(DirectSoundEnumerateW);
		GetAddr(DirectSoundFullDuplexCreate);
		GetAddr(DllCanUnloadNow);
		GetAddr(DllGetClassObject);
		GetAddr(GetDeviceID);
	}
	else if (iequals(selfName.native(), L"d3d9.dll"))
	{
		GetAddr(D3DPERF_BeginEvent);
		GetAddr(D3DPERF_EndEvent);
		GetAddr(D3DPERF_GetStatus);
		GetAddr(D3DPERF_QueryRepeatFrame);
		GetAddr(D3DPERF_SetMarker);
		GetAddr(D3DPERF_SetOptions);
		GetAddr(D3DPERF_SetRegion);
		GetAddr(DebugSetLevel);
		GetAddr(DebugSetMute);
		GetAddr(Direct3D9EnableMaximizedWindowedModeShim);
		GetAddr(Direct3DCreate9);
		GetAddr(Direct3DCreate9Ex);
		GetAddr(Direct3DShaderValidatorCreate9);
		GetAddr(PSGPError);
		GetAddr(PSGPSampleTexture);
	}
	else if (iequals(selfName.native(), L"d3d11.dll"))
	{
		GetAddr(D3D11CoreCreateDevice);
		GetAddr(D3D11CoreCreateLayeredDevice);
		GetAddr(D3D11CoreGetLayeredDeviceSize);
		GetAddr(D3D11CoreRegisterLayers);
		GetAddr(D3D11CreateDevice);
		GetAddr(D3D11CreateDeviceAndSwapChain);
		GetAddr(D3DKMTCloseAdapter);
		GetAddr(D3DKMTCreateAllocation);
		GetAddr(D3DKMTCreateContext);
		GetAddr(D3DKMTCreateDevice);
		GetAddr(D3DKMTCreateSynchronizationObject);
		GetAddr(D3DKMTDestroyAllocation);
		GetAddr(D3DKMTDestroyContext);
		GetAddr(D3DKMTDestroyDevice);
		GetAddr(D3DKMTDestroySynchronizationObject);
		GetAddr(D3DKMTEscape);
		GetAddr(D3DKMTGetContextSchedulingPriority);
		GetAddr(D3DKMTGetDeviceState);
		GetAddr(D3DKMTGetDisplayModeList);
		GetAddr(D3DKMTGetMultisampleMethodList);
		GetAddr(D3DKMTGetRuntimeData);
		GetAddr(D3DKMTGetSharedPrimaryHandle);
		GetAddr(D3DKMTLock);
		GetAddr(D3DKMTOpenAdapterFromHdc);
		GetAddr(D3DKMTOpenResource);
		GetAddr(D3DKMTPresent);
		GetAddr(D3DKMTQueryAdapterInfo);
		GetAddr(D3DKMTQueryAllocationResidency);
		GetAddr(D3DKMTQueryResourceInfo);
		GetAddr(D3DKMTRender);
		GetAddr(D3DKMTSetAllocationPriority);
		GetAddr(D3DKMTSetContextSchedulingPriority);
		GetAddr(D3DKMTSetDisplayMode);
		GetAddr(D3DKMTSetDisplayPrivateDriverFormat);
		GetAddr(D3DKMTSetGammaRamp);
		GetAddr(D3DKMTSetVidPnSourceOwner);
		GetAddr(D3DKMTSignalSynchronizationObject);
		GetAddr(D3DKMTUnlock);
		GetAddr(D3DKMTWaitForSynchronizationObject);
		GetAddr(D3DKMTWaitForVerticalBlankEvent);
		GetAddr(D3DPerformance_BeginEvent);
		GetAddr(D3DPerformance_EndEvent);
		GetAddr(D3DPerformance_GetStatus);
		GetAddr(D3DPerformance_SetMarker);
		GetAddr(EnableFeatureLevelUpgrade);
		GetAddr(OpenAdapter10);
		GetAddr(OpenAdapter10_2);
	}
	else if (iequals(selfName.native(), L"ddraw.dll"))
	{
		GetAddr(AcquireDDThreadLock);
		GetAddr(CompleteCreateSysmemSurface);
		GetAddr(D3DParseUnknownCommand);
		GetAddr(DDGetAttachedSurfaceLcl);
		GetAddr(DDInternalLock);
		GetAddr(DDInternalUnlock);
		GetAddr(DSoundHelp);
		GetAddr(DirectDrawCreate);
		GetAddr(DirectDrawCreateClipper);
		GetAddr(DirectDrawCreateEx);
		GetAddr(DirectDrawEnumerateA);
		GetAddr(DirectDrawEnumerateExA);
		GetAddr(DirectDrawEnumerateExW);
		GetAddr(DirectDrawEnumerateW);
		GetAddr(DllCanUnloadNow);
		GetAddr(DllGetClassObject);
		GetAddr(GetDDSurfaceLocal);
		GetAddr(GetOLEThunkData);
		GetAddr(GetSurfaceFromDC);
		GetAddr(RegisterSpecialCase);
		GetAddr(ReleaseDDThreadLock);
		GetAddr(SetAppCompatData);
	}
	else if (iequals(selfName.native(), L"winmm.dll"))
	{
		GetAddr(CloseDriver);
		GetAddr(DefDriverProc);
		GetAddr(DriverCallback);
		GetAddr(DrvGetModuleHandle);
		GetAddr(GetDriverModuleHandle);
		GetAddr(NotifyCallbackData);
		GetAddr(OpenDriver);
		GetAddr(PlaySound);
		GetAddr(PlaySoundA);
		GetAddr(PlaySoundW);
		GetAddr(SendDriverMessage);
		GetAddr(WOW32DriverCallback);
		GetAddr(WOW32ResolveMultiMediaHandle);
		GetAddr(WOWAppExit);
		GetAddr(aux32Message);
		GetAddr(auxGetDevCapsA);
		GetAddr(auxGetDevCapsW);
		GetAddr(auxGetNumDevs);
		GetAddr(auxGetVolume);
		GetAddr(auxOutMessage);
		GetAddr(auxSetVolume);
		GetAddr(joy32Message);
		GetAddr(joyConfigChanged);
		GetAddr(joyGetDevCapsA);
		GetAddr(joyGetDevCapsW);
		GetAddr(joyGetNumDevs);
		GetAddr(joyGetPos);
		GetAddr(joyGetPosEx);
		GetAddr(joyGetThreshold);
		GetAddr(joyReleaseCapture);
		GetAddr(joySetCapture);
		GetAddr(joySetThreshold);
		GetAddr(mci32Message);
		GetAddr(mciDriverNotify);
		GetAddr(mciDriverYield);
		GetAddr(mciExecute);
		GetAddr(mciFreeCommandResource);
		GetAddr(mciGetCreatorTask);
		GetAddr(mciGetDeviceIDA);
		GetAddr(mciGetDeviceIDFromElementIDA);
		GetAddr(mciGetDeviceIDFromElementIDW);
		GetAddr(mciGetDeviceIDW);
		GetAddr(mciGetDriverData);
		GetAddr(mciGetErrorStringA);
		GetAddr(mciGetErrorStringW);
		GetAddr(mciGetYieldProc);
		GetAddr(mciLoadCommandResource);
		GetAddr(mciSendCommandA);
		GetAddr(mciSendCommandW);
		GetAddr(mciSendStringA);
		GetAddr(mciSendStringW);
		GetAddr(mciSetDriverData);
		GetAddr(mciSetYieldProc);
		GetAddr(mid32Message);
		GetAddr(midiConnect);
		GetAddr(midiDisconnect);
		GetAddr(midiInAddBuffer);
		GetAddr(midiInClose);
		GetAddr(midiInGetDevCapsA);
		GetAddr(midiInGetDevCapsW);
		GetAddr(midiInGetErrorTextA);
		GetAddr(midiInGetErrorTextW);
		GetAddr(midiInGetID);
		GetAddr(midiInGetNumDevs);
		GetAddr(midiInMessage);
		GetAddr(midiInOpen);
		GetAddr(midiInPrepareHeader);
		GetAddr(midiInReset);
		GetAddr(midiInStart);
		GetAddr(midiInStop);
		GetAddr(midiInUnprepareHeader);
		GetAddr(midiOutCacheDrumPatches);
		GetAddr(midiOutCachePatches);
		GetAddr(midiOutClose);
		GetAddr(midiOutGetDevCapsA);
		GetAddr(midiOutGetDevCapsW);
		GetAddr(midiOutGetErrorTextA);
		GetAddr(midiOutGetErrorTextW);
		GetAddr(midiOutGetID);
		GetAddr(midiOutGetNumDevs);
		GetAddr(midiOutGetVolume);
		GetAddr(midiOutLongMsg);
		GetAddr(midiOutMessage);
		GetAddr(midiOutOpen);
		GetAddr(midiOutPrepareHeader);
		GetAddr(midiOutReset);
		GetAddr(midiOutSetVolume);
		GetAddr(midiOutShortMsg);
		GetAddr(midiOutUnprepareHeader);
		GetAddr(midiStreamClose);
		GetAddr(midiStreamOpen);
		GetAddr(midiStreamOut);
		GetAddr(midiStreamPause);
		GetAddr(midiStreamPosition);
		GetAddr(midiStreamProperty);
		GetAddr(midiStreamRestart);
		GetAddr(midiStreamStop);
		GetAddr(mixerClose);
		GetAddr(mixerGetControlDetailsA);
		GetAddr(mixerGetControlDetailsW);
		GetAddr(mixerGetDevCapsA);
		GetAddr(mixerGetDevCapsW);
		GetAddr(mixerGetID);
		GetAddr(mixerGetLineControlsA);
		GetAddr(mixerGetLineControlsW);
		GetAddr(mixerGetLineInfoA);
		GetAddr(mixerGetLineInfoW);
		GetAddr(mixerGetNumDevs);
		GetAddr(mixerMessage);
		GetAddr(mixerOpen);
		GetAddr(mixerSetControlDetails);
		GetAddr(mmDrvInstall);
		GetAddr(mmGetCurrentTask);
		GetAddr(mmTaskBlock);
		GetAddr(mmTaskCreate);
		GetAddr(mmTaskSignal);
		GetAddr(mmTaskYield);
		GetAddr(mmioAdvance);
		GetAddr(mmioAscend);
		GetAddr(mmioClose);
		GetAddr(mmioCreateChunk);
		GetAddr(mmioDescend);
		GetAddr(mmioFlush);
		GetAddr(mmioGetInfo);
		GetAddr(mmioInstallIOProcA);
		GetAddr(mmioInstallIOProcW);
		GetAddr(mmioOpenA);
		GetAddr(mmioOpenW);
		GetAddr(mmioRead);
		GetAddr(mmioRenameA);
		GetAddr(mmioRenameW);
		GetAddr(mmioSeek);
		GetAddr(mmioSendMessage);
		GetAddr(mmioSetBuffer);
		GetAddr(mmioSetInfo);
		GetAddr(mmioStringToFOURCCA);
		GetAddr(mmioStringToFOURCCW);
		GetAddr(mmioWrite);
		GetAddr(mmsystemGetVersion);
		GetAddr(mod32Message);
		GetAddr(mxd32Message);
		GetAddr(sndPlaySoundA);
		GetAddr(sndPlaySoundW);
		GetAddr(tid32Message);
		GetAddr(timeBeginPeriod);
		GetAddr(timeEndPeriod);
		GetAddr(timeGetDevCaps);
		GetAddr(timeGetSystemTime);
		GetAddr(timeGetTime);
		GetAddr(timeKillEvent);
		GetAddr(timeSetEvent);
		GetAddr(waveInAddBuffer);
		GetAddr(waveInClose);
		GetAddr(waveInGetDevCapsA);
		GetAddr(waveInGetDevCapsW);
		GetAddr(waveInGetErrorTextA);
		GetAddr(waveInGetErrorTextW);
		GetAddr(waveInGetID);
		GetAddr(waveInGetNumDevs);
		GetAddr(waveInGetPosition);
		GetAddr(waveInMessage);
		GetAddr(waveInOpen);
		GetAddr(waveInPrepareHeader);
		GetAddr(waveInReset);
		GetAddr(waveInStart);
		GetAddr(waveInStop);
		GetAddr(waveInUnprepareHeader);
		GetAddr(waveOutBreakLoop);
		GetAddr(waveOutClose);
		GetAddr(waveOutGetDevCapsA);
		GetAddr(waveOutGetDevCapsW);
		GetAddr(waveOutGetErrorTextA);
		GetAddr(waveOutGetErrorTextW);
		GetAddr(waveOutGetID);
		GetAddr(waveOutGetNumDevs);
		GetAddr(waveOutGetPitch);
		GetAddr(waveOutGetPlaybackRate);
		GetAddr(waveOutGetPosition);
		GetAddr(waveOutGetVolume);
		GetAddr(waveOutMessage);
		GetAddr(waveOutOpen);
		GetAddr(waveOutPause);
		GetAddr(waveOutPrepareHeader);
		GetAddr(waveOutReset);
		GetAddr(waveOutRestart);
		GetAddr(waveOutSetPitch);
		GetAddr(waveOutSetPlaybackRate);
		GetAddr(waveOutSetVolume);
		GetAddr(waveOutUnprepareHeader);
		GetAddr(waveOutWrite);
		GetAddr(wid32Message);
		GetAddr(wod32Message);
	}
	else if (iequals(selfName.native(), L"version.dll"))
	{
		GetAddr(GetFileVersionInfoA);
		GetAddr(GetFileVersionInfoByHandle);
		GetAddr(GetFileVersionInfoExA);
		GetAddr(GetFileVersionInfoExW);
		GetAddr(GetFileVersionInfoSizeA);
		GetAddr(GetFileVersionInfoSizeExA);
		GetAddr(GetFileVersionInfoSizeExW);
		GetAddr(GetFileVersionInfoSizeW);
		GetAddr(GetFileVersionInfoW);
		GetAddr(VerFindFileA);
		GetAddr(VerFindFileW);
		GetAddr(VerInstallFileA);
		GetAddr(VerInstallFileW);
		GetAddr(VerLanguageNameA);
		GetAddr(VerLanguageNameW);
		GetAddr(VerQueryValueA);
		GetAddr(VerQueryValueW);
	}
	else if (iequals(selfName.native(), L"msimg32.dll"))
	{
		GetAddr(AlphaBlend);
		GetAddr(DllInitialize);
		GetAddr(GradientFill);
		GetAddr(TransparentBlt);
		GetAddr(vSetDdrawflag);
	}
}
